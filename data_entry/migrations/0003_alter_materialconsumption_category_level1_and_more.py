# Generated by Django 4.2.7 on 2025-10-24 15:27

from django.db import migrations, models
import django.db.models.deletion


def migrate_category_data(apps, schema_editor):
    """Convert category names to ForeignKey references"""
    MaterialConsumption = apps.get_model('data_entry', 'MaterialConsumption')
    EmissionCategory = apps.get_model('coefficients', 'EmissionCategory')
    
    for consumption in MaterialConsumption.objects.all():
        # Find category_level1 by name
        if consumption.category_level1_old:
            try:
                cat1 = EmissionCategory.objects.get(
                    name=consumption.category_level1_old,
                    level=1
                )
                consumption.category_level1_new = cat1
            except EmissionCategory.DoesNotExist:
                # If category doesn't exist, skip this record or handle appropriately
                print(f"Warning: Category level 1 '{consumption.category_level1_old}' not found")
                continue
        
        # Find category_level2 by name
        if consumption.category_level2_old:
            try:
                cat2 = EmissionCategory.objects.get(
                    name=consumption.category_level2_old,
                    level=2
                )
                consumption.category_level2_new = cat2
            except EmissionCategory.DoesNotExist:
                print(f"Warning: Category level 2 '{consumption.category_level2_old}' not found")
                continue
        
        consumption.save()


def reverse_migrate_category_data(apps, schema_editor):
    """Reverse migration: copy ForeignKey back to CharField"""
    MaterialConsumption = apps.get_model('data_entry', 'MaterialConsumption')
    
    for consumption in MaterialConsumption.objects.all():
        if consumption.category_level1_new:
            consumption.category_level1_old = consumption.category_level1_new.name
        if consumption.category_level2_new:
            consumption.category_level2_old = consumption.category_level2_new.name
        consumption.save()


class Migration(migrations.Migration):
    dependencies = [
        ("coefficients", "0005_alter_emissioncoefficient_product_code"),
        ("data_entry", "0002_alter_materialconsumption_hotel_name"),
    ]

    operations = [
        # Step 1: Rename old fields
        migrations.RenameField(
            model_name='materialconsumption',
            old_name='category_level1',
            new_name='category_level1_old',
        ),
        migrations.RenameField(
            model_name='materialconsumption',
            old_name='category_level2',
            new_name='category_level2_old',
        ),
        
        # Step 2: Add new ForeignKey fields (nullable temporarily)
        migrations.AddField(
            model_name='materialconsumption',
            name='category_level1_new',
            field=models.ForeignKey(
                limit_choices_to={"level": 1},
                on_delete=django.db.models.deletion.PROTECT,
                related_name="consumptions_level1",
                to="coefficients.emissioncategory",
                verbose_name="一级分类",
                null=True,
                blank=True,
            ),
        ),
        migrations.AddField(
            model_name='materialconsumption',
            name='category_level2_new',
            field=models.ForeignKey(
                limit_choices_to={"level": 2},
                on_delete=django.db.models.deletion.PROTECT,
                related_name="consumptions_level2",
                to="coefficients.emissioncategory",
                verbose_name="二级分类",
                null=True,
                blank=True,
            ),
        ),
        
        # Step 3: Migrate data
        migrations.RunPython(migrate_category_data, reverse_migrate_category_data),
        
        # Step 4: Remove old fields
        migrations.RemoveField(
            model_name='materialconsumption',
            name='category_level1_old',
        ),
        migrations.RemoveField(
            model_name='materialconsumption',
            name='category_level2_old',
        ),
        
        # Step 5: Rename new fields to final names
        migrations.RenameField(
            model_name='materialconsumption',
            old_name='category_level1_new',
            new_name='category_level1',
        ),
        migrations.RenameField(
            model_name='materialconsumption',
            old_name='category_level2_new',
            new_name='category_level2',
        ),
        
        # Step 6: Make fields non-nullable (if needed)
        migrations.AlterField(
            model_name="materialconsumption",
            name="category_level1",
            field=models.ForeignKey(
                limit_choices_to={"level": 1},
                on_delete=django.db.models.deletion.PROTECT,
                related_name="consumptions_level1",
                to="coefficients.emissioncategory",
                verbose_name="一级分类",
            ),
        ),
        migrations.AlterField(
            model_name="materialconsumption",
            name="category_level2",
            field=models.ForeignKey(
                limit_choices_to={"level": 2},
                on_delete=django.db.models.deletion.PROTECT,
                related_name="consumptions_level2",
                to="coefficients.emissioncategory",
                verbose_name="二级分类",
            ),
        ),
        
        # Step 7: Update department field
        migrations.AlterField(
            model_name="materialconsumption",
            name="department",
            field=models.CharField(
                choices=[
                    ("production", "生产部"),
                    ("rd", "研发部"),
                    ("administration", "行政部"),
                    ("logistics", "后勤部"),
                ],
                max_length=50,
                verbose_name="部门名称",
            ),
        ),
    ]
